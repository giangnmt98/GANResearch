"""
This module defines the CGAN class, a subclass of BaseGAN, used for generating
Conditional Generative Adversarial Networks (CGAN).
"""

from abc import ABC

from ganresearch.models.base_gan import BaseGAN


class CGAN(BaseGAN, ABC):
    def __init__(self, config):
        super().__init__(config)

    def build_generator(self):
        """
        Build the architecture of the Generator for the CGAN.

        The generator is responsible for transforming random input
        (typically a noise vector) into data that resembles the training data.

        Returns:
            None
        """
        pass  # Implementation of generator architecture

    def build_discriminator(self):
        """
        Build the architecture of the Discriminator for the CGAN.

        The discriminator is responsible for distinguishing between real
        data and data generated by the generator.

        Returns:
            None
        """
        pass  # Implementation of discriminator architecture
